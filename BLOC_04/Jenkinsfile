pipeline {
    agent {
        docker {
            image 'python:3.10-slim'
        }
    }

    environment {
        REPORT_DIR = "reports"
        UNIT_REPORT = "${REPORT_DIR}/unit"
        INTEGRATION_REPORT = "${REPORT_DIR}/integration"
    }

    stages {
        stage('Install dependencies') {
            steps {
                sh '''
                    apt-get update && apt-get install -y --no-install-recommends gcc
                    pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Run unit tests') {
            steps {
                sh '''
                    mkdir -p ${UNIT_REPORT}
                    pytest tests/unit \
                        --junitxml=${UNIT_REPORT}/report.xml \
                        --html=${UNIT_REPORT}/report.html \
                        --self-contained-html
                '''
            }
        }

        stage('Run integration tests') {
            steps {
                sh '''
                    mkdir -p ${INTEGRATION_REPORT}
                    pytest tests/integration \
                        --junitxml=${INTEGRATION_REPORT}/report.xml \
                        --html=${INTEGRATION_REPORT}/report.html \
                        --self-contained-html
                '''
            }
        }

        stage('Publish reports') {
            steps {
                junit allowEmptyResults: true, testResults: "${REPORT_DIR}/**/report.xml"
                publishHTML(target: [
                    reportDir: "${UNIT_REPORT}",
                    reportFiles: "report.html",
                    reportName: "Unit Tests"
                ])
                publishHTML(target: [
                    reportDir: "${INTEGRATION_REPORT}",
                    reportFiles: "report.html",
                    reportName: "Integration Tests"
                ])
            }
        }
    }

    post {
        success {
            echo "✅ All tests passed!"
            script {
                emailext(
                    subject: "✅ Tests réussis - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    body: """
                        <p>Bonjour,</p>
                        <p>Les tests de <b>${env.JOB_NAME}</b> (build #${env.BUILD_NUMBER}) ont été exécutés avec succès.</p>
                        <p>Vous pouvez consulter les rapports détaillés :</p>
                        <ul>
                          <li><a href="${env.BUILD_URL}HTML_20Report_20(Unit_20Tests)/report.html">Unit Tests</a></li>
                          <li><a href="${env.BUILD_URL}HTML_20Report_20(Integration_20Tests)/report.html">Integration Tests</a></li>
                        </ul>
                        <p>Cordialement,<br/>Jenkins CI</p>
                    """,
                    recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                    to: 'ton.email@domaine.com',
                    mimeType: 'text/html'
                )
            }
        }

        failure {
            echo "❌ Some tests failed."
            script {
                emailext(
                    subject: "❌ Échec des tests - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    body: """
                        <p>Bonjour,</p>
                        <p>Les tests de <b>${env.JOB_NAME}</b> (build #${env.BUILD_NUMBER}) ont échoué.</p>
                        <p>Consultez les rapports détaillés :</p>
                        <ul>
                          <li><a href="${env.BUILD_URL}HTML_20Report_20(Unit_20Tests)/report.html">Unit Tests</a></li>
                          <li><a href="${env.BUILD_URL}HTML_20Report_20(Integration_20Tests)/report.html">Integration Tests</a></li>
                        </ul>
                        <p>Merci de corriger les erreurs dès que possible.</p>
                        <p>Cordialement,<br/>Jenkins CI</p>
                    """,
                    recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                    to: 'ton.email@domaine.com',
                    mimeType: 'text/html'
                )
            }
        }
    }
}
